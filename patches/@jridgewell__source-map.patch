diff --git a/dist/source-map.mjs b/dist/source-map.mjs
index 0d7b29cb47fa81ad28daf4bc02848792a6457a80..d6c4ddcc793bc395830a15957ba8eaf1df5bc0e5 100644
--- a/dist/source-map.mjs
+++ b/dist/source-map.mjs
@@ -11,38 +11,9 @@ class SourceMapConsumer {
         this.sourcesContent = trace.sourcesContent;
         this.version = trace.version;
     }
-    static fromSourceMap(map, mapUrl) {
-        // This is more performant if we receive
-        // a @jridgewell/source-map SourceMapGenerator
-        if (map.toDecodedMap) {
-            return new SourceMapConsumer(map.toDecodedMap(), mapUrl);
-        }
-        // This is a fallback for `source-map` and `source-map-js`
-        return new SourceMapConsumer(map.toJSON(), mapUrl);
-    }
-    get mappings() {
-        return encodedMappings(this._map);
-    }
     originalPositionFor(needle) {
         return originalPositionFor(this._map, needle);
     }
-    generatedPositionFor(originalPosition) {
-        return generatedPositionFor(this._map, originalPosition);
-    }
-    allGeneratedPositionsFor(originalPosition) {
-        return allGeneratedPositionsFor(this._map, originalPosition);
-    }
-    hasContentsOfAllSources() {
-        if (!this.sourcesContent || this.sourcesContent.length !== this.sources.length) {
-            return false;
-        }
-        for (const content of this.sourcesContent) {
-            if (content == null) {
-                return false;
-            }
-        }
-        return true;
-    }
     sourceContentFor(source, nullOnMissing) {
         const sourceContent = sourceContentFor(this._map, source);
         if (sourceContent != null) {
@@ -53,13 +24,6 @@ class SourceMapConsumer {
         }
         throw new Error(`"${source}" is not in the SourceMap.`);
     }
-    eachMapping(callback, context /*, order?: number*/) {
-        // order is ignored as @jridgewell/trace-map doesn't implement it
-        eachMapping(this._map, context ? callback.bind(context) : callback);
-    }
-    destroy() {
-        // noop.
-    }
 }
 class SourceMapGenerator {
     constructor(opts) {
diff --git a/dist/types/source-map.d.ts b/dist/types/source-map.d.ts
index 97b8b9306289510455819d28f81fe473b7138cd6..73ed8d1c106176847a1aff79929404f7f25b66ba 100644
--- a/dist/types/source-map.d.ts
+++ b/dist/types/source-map.d.ts
@@ -12,7 +12,7 @@ export declare class SourceMapConsumer {
     sources: TraceMap['sources'];
     sourcesContent: TraceMap['sourcesContent'];
     version: TraceMap['version'];
-    constructor(map: ConstructorParameters<typeof AnyMap>[0], mapUrl: Parameters<typeof AnyMap>[1]);
+    constructor(map: ConstructorParameters<typeof AnyMap>[0], mapUrl?: Parameters<typeof AnyMap>[1]);
     static fromSourceMap(map: SourceMapGenerator, mapUrl: Parameters<typeof AnyMap>[1]): SourceMapConsumer;
     get mappings(): string;
     originalPositionFor(needle: Parameters<typeof originalPositionFor>[1]): ReturnType<typeof originalPositionFor>;
